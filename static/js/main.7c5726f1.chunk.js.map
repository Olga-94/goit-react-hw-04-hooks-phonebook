{"version":3,"sources":["App.styled.jsx","Title/Title.jsx","Components/Contacts/Form/contactForm.styled.jsx","Components/Contacts/Form/Form.jsx","Components/Contacts/List/contactList.styled.jsx","Components/Contacts/List/List.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["Container","styled","div","SectionTitle","h2","Title","title","Form","Label","Input","Button","ContactForm","onSubmit","initialValues","name","number","validate","values","errors","test","setSubmitting","resetForm","touched","handleChange","handleSubmit","isSubmitting","type","onChange","value","disabled","ListContainer","ListItem","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","App","state","filter","addContact","find","contact","toLowerCase","alert","nanoid","setState","changeFilter","e","currentTarget","getVisibleContact","normalFilter","includes","deleteContact","contactId","prevState","this","visibleContacts","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c5726f1.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 500px;\n  // color: #ab8116;\n  background: #e3da8a;\n  box-shadow: 0px 5px 8px #785c14;\n  padding: 30px;\n  border-radius: 4px;\n  margin: 20px auto;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #8a2154;\n  color: #f7eed7;\n  border-radius: 2px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionTitle } from '../App.styled';\n\nfunction Title({ title }) {\n  return <SectionTitle>{title}</SectionTitle>;\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  margin-bottom: 25px;\n`;\n\nexport const Input = styled.input`\n  width: 440px;\n  border: 1px solid lightblue;\n  border-radius: 4px;\n  font-size: 20px;\n  &:focus {\n    outline: none;\n    border: 1px solid #8a2154;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 25px auto;\n  min-width: 200px;\n  padding: 2px 32px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border-style: none;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  color: #ffffff;\n  background-color: #cf2d7b;\n\n  & svg {\n    height: 18px;\n    width: 18px;\n    margin-right: 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IoPersonAddOutline } from 'react-icons/io5';\nimport { Formik } from 'formik';\nimport { Form, Label, Input, Button } from './contactForm.styled';\n\nexport default function ContactForm({ onSubmit }) {\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.name) {\n          errors.name = 'Обязательное поле';\n        } else if (!values.number) {\n          errors.number = 'Обязательное поле';\n        } else if (\n          !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(\n            values.name,\n          )\n        ) {\n          errors.name =\n            'Имя может состоять только из букв, апострофа, тире и пробелов.';\n        } else if (\n          !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n            values.number,\n          )\n        ) {\n          errors.number =\n            'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        onSubmit(values);\n        setSubmitting(false);\n        resetForm();\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            {' '}\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              onChange={handleChange}\n              value={values.name}\n            />\n          </Label>\n          {errors.name && touched.name && errors.name}\n          <Label>\n            {' '}\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              onChange={handleChange}\n              value={values.number}\n            />\n          </Label>\n          {errors.number && touched.number && errors.number}\n          <Button type=\"submit\" disabled={isSubmitting}>\n            <IoPersonAddOutline />\n            Add contact\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const ListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 25px;\n  max-width: 450px;\n  & svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 200px;\n  padding: 2px 32px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border-style: none;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  color: #ffffff;\n  background-color: #ad7892;\n  & svg {\n    color: #fff;\n    height: 18px;\n    width: 18px;\n    margin-right: 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FiPhone } from 'react-icons/fi';\nimport { AiFillDelete } from 'react-icons/ai';\nimport { ListContainer, ListItem, Button } from './contactList.styled';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ListContainer>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <FiPhone />\n          {name}: {number}\n          <Button onClick={() => onDeleteContact(id)}>\n            <AiFillDelete />\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </ListContainer>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Input } from '../Contacts/Form/contactForm.styled';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Container } from './App.styled';\nimport Title from './Title/Title';\nimport ContactForm from './Components/Contacts/Form/Form';\nimport ContactList from './Components/Contacts/List/List';\nimport Filter from './Components/Filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      { id: 'id-5', name: 'Olga Bezdetko', number: '596-91-79' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContact();\n    return (\n      <Container>\n        <Title title={'Phonebook'} />\n        <ContactForm onSubmit={this.addContact} />\n        <Filter value={filter} onChange={this.changeFilter} />\n        <Title title={'Contacts'} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}